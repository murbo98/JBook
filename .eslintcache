[{"D:\\React and Typescript Build a Portfolio Project\\projects\\jbook\\src\\index.tsx":"1","D:\\React and Typescript Build a Portfolio Project\\projects\\jbook\\src\\plugins\\unpkg-path-plugin.ts":"2","D:\\React and Typescript Build a Portfolio Project\\projects\\jbook\\src\\plugins\\fetch-plugin.ts":"3"},{"size":2067,"mtime":1609495730000,"results":"4","hashOfConfig":"5"},{"size":830,"mtime":1609402184000,"results":"6","hashOfConfig":"5"},{"size":1797,"mtime":1609408366000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"f7iru8",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React and Typescript Build a Portfolio Project\\projects\\jbook\\src\\index.tsx",["15","16"],"import * as esbuild from 'esbuild-wasm';\nimport { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\nimport { fetchPlugin } from './plugins/fetch-plugin';\n\nconst App = () => {\n  const ref = useRef<any>();\n  const iframe = useRef<any>();\n  const [input, setInput] = useState('');\n  const [code, setCode] = useState('');\n\n  const startService = async () => {\n    ref.current = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\n    });\n  };\n  useEffect(() => {\n    startService();\n  }, []);\n\n  const onClick = async () => {\n    if (!ref.current) {\n      return;\n    }\n\n    iframe.current.srcdoc = html;\n\n    const result = await ref.current.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(input)],\n      define: {\n        'process.env.NODE_ENV': '\"production\"',\n        global: 'window',\n      },\n    });\n\n    // setCode(result.outputFiles[0].text);\n    iframe.current.contentWindow.postMessage(result.outputFiles[0].text, '*');\n  };\n\n  const html = `\n    <html>\n      <head></head>\n      <body>\n        <div id=\"root\"></div>\n        <script>\n          window.addEventListener('message', (event) => {\n            try {\n              eval(event.data);\n            } catch (err) {\n              const root = document.querySelector('#root');\n              root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n              console.error(err);\n            }\n          }, false);\n        </script>\n      </body>\n    </html>\n  `;\n\n  return (\n    <div>\n      <textarea\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      ></textarea>\n      <div>\n        <button onClick={onClick}>Submit</button>\n      </div>\n      <pre>{code}</pre>\n      <iframe ref={iframe} sandbox=\"allow-scripts\" srcDoc={html} />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","D:\\React and Typescript Build a Portfolio Project\\projects\\jbook\\src\\plugins\\unpkg-path-plugin.ts",[],"D:\\React and Typescript Build a Portfolio Project\\projects\\jbook\\src\\plugins\\fetch-plugin.ts",[],{"ruleId":"17","severity":1,"message":"18","line":11,"column":16,"nodeType":"19","messageId":"20","endLine":11,"endColumn":23},{"ruleId":"21","severity":1,"message":"22","line":75,"column":7,"nodeType":"23","endLine":75,"endColumn":68},"@typescript-eslint/no-unused-vars","'setCode' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement"]